@model AcmeIncEcommerce.Models.ShoppingCartViewModel
@{
    ViewBag.Title = "Your Shopping Cart";
}
    <div class="jumbotron" style="margin-top:40px;">
        <h2 style="margin-top: -20px;">@ViewBag.Title</h2>
        @if (Model.CartQueues.Count() > 0)
        {
            <div>
                @using (Html.BeginForm("UpdateCart", "ShoppingCart"))
                {
                    @Html.AntiForgeryToken();
                    <input class="btn btn-sm btn-success" type="submit" value="Update Cart" />
                    <hr />
                    <div class="row">

                        <div class="col-md-3"><label>Item</label></div>
                        <div class="col-md-2"><label>Quantity</label></div>
                        <div class="col-md-2"><label>Price per unit</label></div>
                        <div class="col-md-2"><label>Price</label></div>
                      
                    </div>

                    <hr />

                    for (int i = 0; i < Model.CartQueues.Count; i++)
                    {
                        <div class="row">
                            <div class="col-md-1">
                                @if (Model.CartQueues[i].Product.ProductImageMappings != null
                                 && Model.CartQueues[i].Product.ProductImageMappings.Any())
                                {

                                    <a href="@Url.Action("Details", "Products", new { id = Model.CartQueues[i].ProductID })">
                                        <img src="@(Url.Content(Constants.ProductImagePath) +
                                        Model.CartQueues[i].Product.ProductImageMappings
                                        .OrderBy(pim => pim.ImageNumber).ElementAt(0).ProductImage.FileName)" Style="height:50px; width:auto;">

                                    </a>
                                }

                            </div>
                            <div class="col-md-2">
                                @Html.ActionLink(Model.CartQueues[i].Product.ProductName, "Details",
                                "Products", new { id = Model.CartQueues[i].ProductID }, null)

                            </div>
                            <div class="col-md-2">
                                @Html.HiddenFor(productID => Model.CartQueues[i].ProductID)
                                @Html.TextBoxFor(quantity => Model.CartQueues[i].Quantity, new { Class = "form-control", Style = "width:50px; height:30px" })

                                <p>
                                    @Html.ValidationMessageFor(quantity => Model.CartQueues[i].Quantity, "", new { @class = "text-danger" })
                                </p>
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayFor(price => Model.CartQueues[i].Product.ProductPrice)
                            </div>
                            <div class="col-md-3">
                                @((Model.CartQueues[i].Quantity * Model.CartQueues[i].Product.ProductPrice).ToString("c"))
                            </div>
                            <div class="col-md-2">
                                @Html.ActionLink("Remove", "RemoveQueue", "ShoppingCart", new { id = Model.CartQueues[i].Product.ProductID }, null)
                            </div>

                            <br />
                            <br />

                            <hr />
                        </div>
                    }
                }



            <div class="row">
             
                <div class="col-md-9"><label></label></div>
                <div class="col-md-1"><label>Subtotal</label></div>
                <br />
               <hr />
                <div class="col-md-9">
                    @Html.DisplayNameFor(model => model.SumTotalCost)
                </div>

                <div class="col-md-1">
                    @Html.DisplayFor(model => model.SumTotalCost)
                </div>
                <div class="col-md-1">
                    @Html.ActionLink("Order Now", "Review", "Orders", null, new { @class = "btn btn-sm btn-success" })
                </div>

            </div>

            </div>

        }
        else
        {
            <p> is empty</p>
        }
        <div>
            <hr />
            @Html.ActionLink("Continue Shopping", "Index", "Products")
        </div>

    </div>

    @section Scripts{
        @Scripts.Render("~/bundles/jqueryval")
    }
